{
	"variables": [],
	"info": {
		"name": "Cloud Armor Demo 2.0",
		"_postman_id": "bde96587-db22-b2d3-eba7-584fe0cfe8fc",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "STEP 1 - Create a new VPC",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/global/networks",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"routingConfig\": {\n    \"routingMode\": \"REGIONAL\"\n  },\n  \"name\": \"{{vpc-name}}\",\n  \"autoCreateSubnetworks\": false\n}"
				},
				"description": "Create a new VPC network. Default name is \"cloudarmor-lab\""
			},
			"response": []
		},
		{
			"name": "STEP 1a - Delay of 10 seconds",
			"request": {
				"url": "https://postman-echo.com/delay/10",
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"routingConfig\": {\n    \"routingMode\": \"REGIONAL\"\n  },\n  \"name\": \"{{vpc-name}}\",\n  \"autoCreateSubnetworks\": false\n}"
				},
				"description": "Create a new VPC network. Default name is \"cloudarmor-lab\""
			},
			"response": []
		},
		{
			"name": "STEP 1b - Delay of 10 seconds",
			"request": {
				"url": "https://postman-echo.com/delay/10",
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"routingConfig\": {\n    \"routingMode\": \"REGIONAL\"\n  },\n  \"name\": \"{{vpc-name}}\",\n  \"autoCreateSubnetworks\": false\n}"
				},
				"description": "Create a new VPC network. Default name is \"cloudarmor-lab\""
			},
			"response": []
		},
		{
			"name": "STEP 2 - Create Backends' Subnetwork",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/regions/{{region}}/subnetworks",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"privateIpGoogleAccess\": true,\n  \"enableFlowLogs\": false,\n  \"name\": \"{{name-one}}\",\n  \"ipCidrRange\": \"{{range-one}}\",\n  \"network\": \"https://clients6.google.com/compute/v1/projects/{{project}}/global/networks/{{vpc-name}}\"\n}"
				},
				"description": "Create the subnetwork that will be used by the backends of the global load balancer. \nBy default this lives in us-west1 region"
			},
			"response": []
		},
		{
			"name": "STEP 2a - Create Subnetwork for Clients in USA",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/regions/{{region}}/subnetworks",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"privateIpGoogleAccess\": true,\n  \"enableFlowLogs\": false,\n  \"name\": \"{{name-two}}\",\n  \"ipCidrRange\": \"{{range-two}}\",\n  \"network\": \"https://clients6.google.com/compute/v1/projects/{{project}}/global/networks/{{vpc-name}}\"\n}"
				},
				"description": "Create the subnetwork that will be used by the clients of the web service. By default this lives in us-west1 region"
			},
			"response": []
		},
		{
			"name": "STEP 2b - Create Subnetwork for Clients outside USA",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/regions/{{region-eu}}/subnetworks",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"privateIpGoogleAccess\": true,\n  \"enableFlowLogs\": false,\n  \"name\": \"{{name-three}}\",\n  \"ipCidrRange\": \"{{range-three}}\",\n  \"network\": \"https://clients6.google.com/compute/v1/projects/{{project}}/global/networks/{{vpc-name}}\"\n}"
				},
				"description": "Create the subnetwork that will be used by the clients of the web service. By default this lives in europe-west1 region"
			},
			"response": []
		},
		{
			"name": "STEP 3 - Create a Firewall Rule for SSH",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/global/firewalls",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"allow-ssh-in\",\n  \"selfLink\": \"projects/{{project}}/global/firewalls/allow-ssh-in\",\n  \"network\": \"projects/{{project}}/global/networks/{{vpc-name}}\",\n  \"direction\": \"INGRESS\",\n  \"priority\": 1000,\n  \"allowed\": [\n    {\n      \"IPProtocol\": \"tcp\",\n      \"ports\": [\n        \"22\"\n      ]\n    }\n  ],\n  \"sourceRanges\": [\n    \"0.0.0.0/0\"\n  ]\n}"
				},
				"description": "Create a new firewall rule to allow SSH into instances"
			},
			"response": []
		},
		{
			"name": "STEP 4 - Create a Firewall Rule for HTTP",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/global/firewalls",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"cloudarmor-allow-http\",\n  \"kind\": \"compute#firewall\",\n  \"sourceRanges\": [\n    \"0.0.0.0/0\"\n  ],\n  \"targetTags\": [\n    \"http-server\"\n  ],\n  \"allowed\": [\n    {\n      \"IPProtocol\": \"tcp\",\n      \"ports\": [\n        \"80\"\n      ]\n    }\n  ],\n  \"network\": \"projects/{{project}}/global/networks/{{vpc-name}}\"\n}"
				},
				"description": "Create a new firewall rule to allow HTTP into instances tagged with \"http-server\""
			},
			"response": []
		},
		{
			"name": "STEP 5 - Create a Firewall Rule for HTTPs",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/global/firewalls",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"cloudarmor-allow-https\",\n  \"kind\": \"compute#firewall\",\n  \"sourceRanges\": [\n    \"0.0.0.0/0\"\n  ],\n  \"targetTags\": [\n    \"https-server\"\n  ],\n  \"allowed\": [\n    {\n      \"IPProtocol\": \"tcp\",\n      \"ports\": [\n        \"443\"\n      ]\n    }\n  ],\n  \"network\": \"projects/{{project}}/global/networks/{{vpc-name}}\"\n}"
				},
				"description": "Create a new firewall rule to allow HTTPs into instances tagged with \"https-server\""
			},
			"response": []
		},
		{
			"name": "STEP 6 - Create backend \"white\"",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/zones/{{zone-one}}/instances",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"white\",\n  \"zone\": \"projects/{{project}}/zones/{{zone-one}}\",\n  \"minCpuPlatform\": \"Automatic\",\n  \"machineType\": \"projects/{{project}}/zones/{{zone-one}}/machineTypes/f1-micro\",\n  \"metadata\": {\n    \"items\": [\n      {\n        \"key\": \"startup-script\",\n        \"value\": \"#! /bin/bash\\nsudo -i\\napt-get -y update\\napt-get install -y nginx\\nrm /etc/nginx/sites-available/default\\ntee /etc/nginx/sites-available/default > /dev/null <<EOF \\nserver {\\n        listen 80 default_server;\\n        root /usr/share/nginx/html;\\n        index index.html index.htm;\\n        server_name localhost;\\n        location / {\\n                try_files \\\\$uri \\\\$uri/ =404;\\n        }\\n}\\nEOF\\nrm /usr/share/nginx/html/index.*\\ntee /usr/share/nginx/html/index.html > /dev/null <<EOF\\n*****************************\\nWHITE SERVER IS REACHABLE\\n*****************************\\nEOF\\nmkdir /usr/share/nginx/html/white\\ncp /usr/share/nginx/html/index.html /usr/share/nginx/html/white/\\nrm /etc/nginx/sites-enabled/default\\nln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default\\nnginx -t && service nginx reload\"\n\n      }\n    ]\n  },\n  \"tags\": {\n    \"items\": [\n      \"white\",\n      \"http-server\",\n      \"https-server\"\n    ]\n  },\n  \"disks\": [\n    {\n      \"type\": \"PERSISTENT\",\n      \"boot\": true,\n      \"mode\": \"READ_WRITE\",\n      \"autoDelete\": true,\n      \"deviceName\": \"white\",\n      \"initializeParams\": {\n        \"sourceImage\": \"projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20180306\",\n        \"diskType\": \"projects/{{project}}/zones/{{zone-one}}/diskTypes/pd-standard\",\n        \"diskSizeGb\": \"10\"\n      }\n    }\n  ],\n  \"canIpForward\": false,\n  \"networkInterfaces\": [\n    {\n      \"subnetwork\": \"projects/{{project}}/regions/{{region}}/subnetworks/{{name-one}}\",\n      \"accessConfigs\": [\n        {\n          \"name\": \"External NAT\",\n          \"type\": \"ONE_TO_ONE_NAT\"\n        }\n      ],\n      \"aliasIpRanges\": []\n    }\n  ],\n  \"description\": \"\",\n  \"labels\": {},\n  \"scheduling\": {\n    \"preemptible\": false,\n    \"onHostMaintenance\": \"MIGRATE\",\n    \"automaticRestart\": true\n  },\n  \"deletionProtection\": false\n}"
				},
				"description": "Create a new instance with nginx that will be used as the white backend of the global load balancer"
			},
			"response": []
		},
		{
			"name": "STEP 7 - Create backend \"black\"",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/zones/{{zone-one}}/instances",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"black\",\n  \"zone\": \"projects/{{project}}/zones/{{zone-one}}\",\n  \"minCpuPlatform\": \"Automatic\",\n  \"machineType\": \"projects/{{project}}/zones/{{zone-one}}/machineTypes/f1-micro\",\n  \"metadata\": {\n    \"items\": [\n      {\n        \"key\": \"startup-script\",\n        \"value\": \"#! /bin/bash\\nsudo -i\\napt-get -y update\\napt-get install -y nginx\\nrm /etc/nginx/sites-available/default\\ntee /etc/nginx/sites-available/default > /dev/null <<EOF \\nserver {\\n        listen 80 default_server;\\n        root /usr/share/nginx/html;\\n        index index.html index.htm;\\n        server_name localhost;\\n        location / {\\n                try_files \\\\$uri \\\\$uri/ =404;\\n        }\\n}\\nEOF\\nrm /usr/share/nginx/html/index.*\\ntee /usr/share/nginx/html/index.html > /dev/null <<EOF\\n*****************************\\nBLACK SERVER IS REACHABLE\\n*****************************\\nEOF\\nmkdir /usr/share/nginx/html/black\\ncp /usr/share/nginx/html/index.html /usr/share/nginx/html/black/\\nrm /etc/nginx/sites-enabled/default\\nln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default\\nnginx -t && service nginx reload\\napt-get -y install mysql-client-core-5.7\\napt-get -y install apache2\\nservice apache2 stop\\nservice nginx status >> nginx.status\\nservice apache2 status >> apache.status\\ncd /var/www/html\\ngit clone https://github.com/ethicalhack3r/DVWA.git\\ncp /var/www/html/DVWA/config/config.inc.php.dist /var/www/html/DVWA/config/config.inc.php\\napt-get -y install libapache2-mod-php7.0 libapache2-mod-fastcgi php7.0-fpm php7.0 php-mysql php7.0-mbstring\\napt-get -y install install php7.0-gd\\nchmod 777 /var/www/html/DVWA/hackable/uploads/\\nchmod 777 /var/www/html/DVWA/external/phpids/0.6/lib/IDS/tmp/phpids_log.txt\\nchmod 777 /var/www/html/DVWA/config\"\n      }\n    ]\n  },\n  \"tags\": {\n    \"items\": [\n      \"black\",\n      \"http-server\",\n      \"https-server\"\n    ]\n  },\n  \"disks\": [\n    {\n      \"type\": \"PERSISTENT\",\n      \"boot\": true,\n      \"mode\": \"READ_WRITE\",\n      \"autoDelete\": true,\n      \"deviceName\": \"black\",\n      \"initializeParams\": {\n        \"sourceImage\": \"projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20180306\",\n        \"diskType\": \"projects/{{project}}/zones/{{zone-one}}/diskTypes/pd-standard\",\n        \"diskSizeGb\": \"10\"\n      }\n    }\n  ],\n  \"canIpForward\": false,\n  \"networkInterfaces\": [\n    {\n      \"subnetwork\": \"projects/{{project}}/regions/{{region}}/subnetworks/{{name-one}}\",\n      \"accessConfigs\": [\n        {\n          \"name\": \"External NAT\",\n          \"type\": \"ONE_TO_ONE_NAT\"\n        }\n      ],\n      \"aliasIpRanges\": []\n    }\n  ],\n  \"description\": \"\",\n  \"labels\": {},\n  \"scheduling\": {\n    \"preemptible\": false,\n    \"onHostMaintenance\": \"MIGRATE\",\n    \"automaticRestart\": true\n  },\n  \"deletionProtection\": false\n}"
				},
				"description": "Create a new instance with nginx and DVWA that will be used as the black backend"
			},
			"response": []
		},
		{
			"name": "STEP 8 - Create First Instance Group",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/zones/{{zone-one}}/instanceGroups",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{ig-white}}\",\n  \"network\": \"projects/{{project}}/global/networks/{{vpc-name}}\",\n  \"namedPorts\": []\n}"
				},
				"description": "Create a new instance group for the backedn \"white\""
			},
			"response": []
		},
		{
			"name": "STEP 8a - Create Second Instance Group",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/zones/{{zone-one}}/instanceGroups",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"{{ig-black}}\",\n  \"network\": \"projects/{{project}}/global/networks/{{vpc-name}}\",\n  \"namedPorts\": []\n}"
				},
				"description": "Create a new instance group for the backend \"black\""
			},
			"response": []
		},
		{
			"name": "STEP 9 - Add \"white\" backend to Instance Group \"white\"",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/zones/{{zone-one}}/instanceGroups/{{ig-white}}/addInstances",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"instances\": [\n    {\n      \"instance\": \"projects/{{project}}/zones/{{zone-one}}/instances/white\"\n    }\n  ]\n}"
				},
				"description": "Add white instance into the white Instance Group"
			},
			"response": []
		},
		{
			"name": "STEP 10 - Add \"black\" instance to Instance Group \"black\"",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/zones/{{zone-one}}/instanceGroups/{{ig-black}}/addInstances",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"instances\": [\n    {\n      \"instance\": \"projects/{{project}}/zones/{{zone-one}}/instances/black\"\n    }\n  ]\n}"
				},
				"description": "Add black instance into the black Instance Group"
			},
			"response": []
		},
		{
			"name": "STEP 11 - Create client instance (USA)",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/zones/{{zone-one}}/instances",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"client-us\",\n  \"zone\": \"projects/{{project}}/zones/{{zone-one}}\",\n  \"minCpuPlatform\": \"Automatic\",\n  \"machineType\": \"projects/{{project}}/zones/{{zone-one}}/machineTypes/f1-micro\",\n  \"metadata\": {\n    \"items\": [\n      {\n        \"key\": \"startup-script\",\n        \"value\": \"#! /bin/bash\\nsudo -i\\napt-get -y update\\ncurl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall &&   chmod 755 msfinstall &&   ./msfinstall\"\n      }\n    ]\n  },\n  \"tags\": {\n    \"items\": [\n      \"client-us\",\n      \"http-server\",\n      \"https-server\"\n    ]\n  },\n  \"disks\": [\n    {\n      \"type\": \"PERSISTENT\",\n      \"boot\": true,\n      \"mode\": \"READ_WRITE\",\n      \"autoDelete\": true,\n      \"deviceName\": \"client-us\",\n      \"initializeParams\": {\n        \"sourceImage\": \"projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20180306\",\n        \"diskType\": \"projects/{{project}}/zones/{{zone-one}}/diskTypes/pd-standard\",\n        \"diskSizeGb\": \"10\"\n      }\n    }\n  ],\n  \"canIpForward\": false,\n  \"networkInterfaces\": [\n    {\n      \"subnetwork\": \"projects/{{project}}/regions/{{region}}/subnetworks/{{name-two}}\",\n      \"accessConfigs\": [\n        {\n          \"name\": \"External NAT\",\n          \"type\": \"ONE_TO_ONE_NAT\"\n        }\n      ],\n      \"aliasIpRanges\": []\n    }\n  ],\n  \"description\": \"\",\n  \"labels\": {},\n  \"scheduling\": {\n    \"preemptible\": false,\n    \"onHostMaintenance\": \"MIGRATE\",\n    \"automaticRestart\": true\n  },\n  \"deletionProtection\": false\n}"
				},
				"description": "Create a new client instance in the USA subnetwork.\nThe instance is also pre-loaded with metasploit. \nTo complete the metasploit installation\n\t(1) ssh into the instance \n\t(2) verify metasploit installation is finieshed with ps -ef | grep metasploit\n\t(3) type \"msfconsole\" and answer \"y\" to the question"
			},
			"response": []
		},
		{
			"name": "STEP 12 - Create client instance (non-USA)",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/zones/{{zone-eu}}/instances",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"client-eu\",\n  \"zone\": \"projects/{{project}}/zones/{{zone-eu}}\",\n  \"minCpuPlatform\": \"Automatic\",\n  \"machineType\": \"projects/{{project}}/zones/{{zone-eu}}/machineTypes/f1-micro\",\n  \"metadata\": {\n    \"items\": [\n      {\n        \"key\": \"startup-script\",\n        \"value\": \"#! /bin/bash\\nsudo -i\\napt-get -y update\\ncurl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall &&   chmod 755 msfinstall &&   ./msfinstall\"\n      }\n    ]\n  },\n  \"tags\": {\n    \"items\": [\n      \"client-eu\",\n      \"http-server\",\n      \"https-server\"\n    ]\n  },\n  \"disks\": [\n    {\n      \"type\": \"PERSISTENT\",\n      \"boot\": true,\n      \"mode\": \"READ_WRITE\",\n      \"autoDelete\": true,\n      \"deviceName\": \"client-eu\",\n      \"initializeParams\": {\n        \"sourceImage\": \"projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20180306\",\n        \"diskType\": \"projects/{{project}}/zones/{{zone-eu}}/diskTypes/pd-standard\",\n        \"diskSizeGb\": \"10\"\n      }\n    }\n  ],\n  \"canIpForward\": false,\n  \"networkInterfaces\": [\n    {\n      \"subnetwork\": \"projects/{{project}}/regions/{{region-eu}}/subnetworks/{{name-three}}\",\n      \"accessConfigs\": [\n        {\n          \"name\": \"External NAT\",\n          \"type\": \"ONE_TO_ONE_NAT\"\n        }\n      ],\n      \"aliasIpRanges\": []\n    }\n  ],\n  \"description\": \"\",\n  \"labels\": {},\n  \"scheduling\": {\n    \"preemptible\": false,\n    \"onHostMaintenance\": \"MIGRATE\",\n    \"automaticRestart\": true\n  },\n  \"deletionProtection\": false\n}"
				},
				"description": "Create a new client instance in the non-USA subnetwork. \nThe instance is also pre-loaded with metasploit. \nTo complete the metasploit installation \n\t(1) ssh into the instance \n\t(2) verify metasploit installation is finieshed with ps -ef | grep metasploit \n\t(3) type \"msfconsole\" and answer \"y\" to the question"
			},
			"response": []
		},
		{
			"name": "Get-VPC",
			"request": {
				"url": "https://www.googleapis.com/compute/v1/projects/{{project}}/global/networks",
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{Authorization}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"routingConfig\": {\n    \"routingMode\": \"REGIONAL\"\n  },\n  \"name\": \"cloudarmor\",\n  \"autoCreateSubnetworks\": false\n}"
				},
				"description": "List existing VPC networks"
			},
			"response": []
		}
	]
}